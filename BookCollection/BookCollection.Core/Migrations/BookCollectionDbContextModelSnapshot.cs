// <auto-generated />
using BookCollection.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookCollection.Core.Migrations
{
    [DbContext(typeof(BookCollectionDbContext))]
    partial class BookCollectionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookCollection.Core.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorName = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 2,
                            AuthorName = "J. R. R. Tolkien"
                        },
                        new
                        {
                            Id = 3,
                            AuthorName = "Isaac Asimov"
                        });
                });

            modelBuilder.Entity("BookCollection.Core.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookRatingId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookRatingId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            BookRatingId = 5,
                            GenreId = 2,
                            Title = "Harry Potter and the Half-Blood Prince"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 3,
                            BookRatingId = 4,
                            GenreId = 1,
                            Title = "I, Robot"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            BookRatingId = 5,
                            GenreId = 2,
                            Title = "The Lord of the Rings"
                        });
                });

            modelBuilder.Entity("BookCollection.Core.Models.BookRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = "Very Bad (1)"
                        },
                        new
                        {
                            Id = 2,
                            Rating = "Bad (2)"
                        },
                        new
                        {
                            Id = 3,
                            Rating = "Ok (3)"
                        },
                        new
                        {
                            Id = 4,
                            Rating = "Good (4)"
                        },
                        new
                        {
                            Id = 5,
                            Rating = "Very Good (5)"
                        });
                });

            modelBuilder.Entity("BookCollection.Core.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenreName = "Sci-Fi"
                        },
                        new
                        {
                            Id = 2,
                            GenreName = "Fantasy"
                        },
                        new
                        {
                            Id = 3,
                            GenreName = "Thriller"
                        });
                });

            modelBuilder.Entity("BookCollection.Core.Models.Book", b =>
                {
                    b.HasOne("BookCollection.Core.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookCollection.Core.Models.BookRating", "BookRating")
                        .WithMany()
                        .HasForeignKey("BookRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookCollection.Core.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("BookRating");

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
